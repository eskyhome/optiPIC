/* CODE HISTORY LOG:
 * July '93: Optimized part_rho using rho_k
 *
 * Nov 23, '92  -- clean verison
 *
 * 	Tuning parameters in attempting to show plasma oscillations
 *	(Assignment 6), as discussed w/ Niels April 14 1992 
 * Nov '93  - Modified for combined KSR/Sun implementation 
 *	    - Moved particle loops within subroutines.
 *	       (incl. combining FIELD_PART and V_PART into PUSH_V,
 *		and renaming X_PART as PUSH_LOC )
 *	    - added ANSI type declearations to fucntion variables
 *	    - added input routine for grid-wave test
 *	    - added use of floor when truncating doubles to avoid mach. dep.
 * Dec '93
 *	    - replaced A0INDEX macro calls with pointer "index" in FFT solver.
 *	    - reduced FFT solver scaling to one divide by /= (k^2 * eps)
 *	    - added test for particle outside system on set-up
 *	    - included pointer to "warning.sim" for WARNING messages
 *
 * Jan '94
 *	    - although not used in this serial version,
 *		pthreads constructs added using SPC (Simple Presto C)
 *		for PART_RHO and PUSH_V left in as comments.
 * 	    - open WARNING file immediately. Direct Part_Rho WARNING msgs to it.
 * Feb '94
 *	    - got rid of divisions inside particle loops.	
 *
 * Mar '94  - add Niels' init routiune
 *
 * Apr '94  - test with two species of oposite init. velocity
 *
 * May '94  - debug with uniform grid init
 *
 * June '94 - get rid of globals in DataInit etc.
 *	    - fixed later introduced FFT pointer-bug
 */


/*      Author: Anne C. Elster                   March 1992 - 

*	ppsim.c -- parallel particle simulator.
*
*	A Hybrid FE-FD method for a rectangular grid and Euler integration
*	are used to track indep. particles in an electric field.
*	I.e. the field is computed at the nodes using Finite Differences
*	and iterpolated with Finite Elements.
*
*	The program assumes  a chage density per node which gets
*	updated according to the particles' location -- i.e. the particles
* 	influence the field. 
*
*	This simulation  uses the ACCELERATION MODEL for moving the particles.
*	Here the force on the particle is proportional to the field strength
*	rather than the velocity:
*			F = q * E
*	The Leap-frog method is used for updating the particles'
*	location according to this model.
*
*	Finally, a drag term proportional to the velocity is added in.
*	(currently not used  -- July '92)
*
*	The initial data (no. of grid points, init.
*	cond.) is read in from a file through "scanf".
*
* 	- Array size read in from standard input and malloced.
* 	- Elementary timing operations performed. 
*
*	The particle's trajectories are recorded on output file "p.out".
*
*
*/